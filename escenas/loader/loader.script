local datos = require("main.datos")

function init(self)
	msg.post("", "acquire_input_focus")
	
	self.colecciones = {"#pantalla_inicial", "#seleccion_de_nivel", "#gameplay"}
	self.contador = 1
	msg.post(self.colecciones[self.contador], "load")

	--fondo
	go.animate("#sprite", "scale", go.PLAYBACK_LOOP_PINGPONG, 1.1, go.EASING_LINEAR, 20)
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("proxy_loaded") then
		-- New world is loaded. Init and enable it.
		msg.post(sender, "init")
		msg.post(sender, "enable")
		--
	elseif message_id == hash("avanzar_escena") then
		print("Loader: avanzar escena.")
		datos.ultima_escena = self.colecciones[self.contador]
		msg.post(self.colecciones[self.contador], "unload")
		self.contador = self.contador + 1
	elseif message_id == hash("retroceder_escena") then
		datos.ultima_escena = self.colecciones[self.contador]
		print("Loader: retroceder escena.")
		msg.post(self.colecciones[self.contador], "unload")
		self.contador = self.contador - 1
	elseif message_id == hash("proxy_unloaded") then
		msg.post(self.colecciones[self.contador], "load")
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
