local datos = require("main.datos")
local crear_t = [[Crear Juegos en Argentina, desde su creación a principios de 2020, promueve, fomenta 
y produce contenidos lúdicos para todas las edades. Tanto mediante la elaboración con un equipo 
de contenidistas lúdicos propios como a través de convocatorias masivas con las que estimulamos el 
desarrollo de videojuegos, juegos de mesa e imprimibles que tengan contenidos con temáticas educativas, 
inclusivas y federales, generamos una ludoteca de acceso libre y gratuito para todos, todas y todes.
Entrá a www.crearjuegos.ar para conocer todos nuestros juegos.

Crear es una política publica de la SMYCP.
]]
local paka_t = [[ PakaPaka es el primer canal infantil público de la Argentina.
Quienes hemos formado parte del canal desde sus inicios, en el año 2010, lo pensamos 
como un espacio de juego e imaginación, de curiosidad y conocimiento, de innovación y
desafío y, sobre todo, de descubriemiento y diversión.
]]

local desaparecer_y_aparecer = function(self, valor)
	if valor == 0 then
		gui.animate(self.proto, "color", vmath.vector4(1,1,1,0), gui.EASING_LINEAR, 0.5)
		gui.animate(self.laser, "color", vmath.vector4(1,1,1,0), gui.EASING_LINEAR, 0.5)
		msg.post("/fondo#pantalla_inicial_scr", "desaparecer")
	else
		gui.animate(self.proto, "color", vmath.vector4(1,1,1,1), gui.EASING_LINEAR, 0.65)
		gui.animate(self.laser, "color", vmath.vector4(1,1,1,1), gui.EASING_LINEAR, 0.65)
		msg.post("/fondo#pantalla_inicial_scr", "aparecer")
	end

end

function init(self)
	-- nodos
	self.play = gui.get_node("play")
	self.proto = gui.get_node("proto")
	self.laser = gui.get_node("laser")
	self.acerca_de = gui.get_node("acerca_de")
	self.paka = gui.get_node("paka")
	self.secretaria = gui.get_node("secretaria")
	self.box_azul = gui.get_node("box_azul")
	self.sonido_nodo = gui.get_node("sonido")
	if datos.sonido == false then
		gui.play_flipbook(self.sonido_nodo, "sonido off")
	end

	self.acerca_box = gui.get_node("acerca_box")
	gui.set_enabled(self.acerca_box, false)

	self.crear_txt = gui.get_node("crear_txt")
	gui.set_text(self.crear_txt, crear_t)

	self.paka_txt = gui.get_node("paka_txt")
	gui.set_text(self.paka_txt, paka_t)

	self.falsa_flecha = gui.get_node("falsa_flecha")

	gui.set_color(self.play, vmath.vector4(1,1,1,0))
	gui.set_color(self.acerca_de, vmath.vector4(1,1,1,0))
	gui.set_color(self.proto, vmath.vector4(1,1,1,0))
	gui.set_color(self.laser, vmath.vector4(1,1,1,0))
	gui.set_color(self.paka, vmath.vector4(1,1,1,0))
	gui.set_color(self.secretaria, vmath.vector4(1,1,1,0))
	gui.animate(self.box_azul, "color.w", 0, gui.EASING_LINEAR, 0)
	gui.set_color(self.acerca_box, vmath.vector4(1,1,1,0))
	gui.set_color(self.sonido_nodo, vmath.vector4(1,1,1,0))
	gui.animate(self.play, "color", vmath.vector4(1,1,1,1), gui.EASING_LINEAR, 0.5)
	gui.animate(self.acerca_de, "color", vmath.vector4(1,1,1,1), gui.EASING_LINEAR, 0.5)
	gui.animate(self.proto, "color", vmath.vector4(1,1,1,1), gui.EASING_LINEAR, 0.5)
	gui.animate(self.laser, "color", vmath.vector4(1,1,1,1), gui.EASING_LINEAR, 0.5, 0, function() msg.post("", "acquire_input_focus") end)
	gui.animate(self.paka, "color", vmath.vector4(1,1,1,1), gui.EASING_LINEAR, 0.5)
	gui.animate(self.secretaria, "color", vmath.vector4(1,1,1,1), gui.EASING_LINEAR, 0.5)
	gui.animate(self.box_azul, "color.w", 1, gui.EASING_LINEAR, 0.5)
	gui.animate(self.sonido_nodo, "color", vmath.vector4(1,1,1,1), gui.EASING_LINEAR, 0.5)
	local play_scale = gui.get_scale(self.play)

	gui.animate(self.play, "scale", play_scale * 1.035, gui.EASING_INBOUNCE, 5, 0, nil, gui.PLAYBACK_LOOP_PINGPONG)
	gui.animate(self.proto, "rotation.z", -2, gui.EASING_LINEAR, 8, 0, nil, gui.PLAYBACK_LOOP_PINGPONG)
	gui.animate(self.laser, "rotation.z", 2, gui.EASING_LINEAR, 8, 0, nil, gui.PLAYBACK_LOOP_PINGPONG)
end


function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed then
		if gui.pick_node(self.play, action.x, action.y) and gui.is_enabled(self.acerca_box) == false then
			--print("play, pasar de escena") -- Estar atento si es necesario sacar el input.
			local play_scale = gui.get_scale(self.play)
			datos.animar_click(self, self.play, play_scale * 1.1, 0.8)
			sound.play("#play_inicial", {gain = datos.gain_sfx})
			msg.post("", "release_input_focus")
			msg.post("/fondo", "sacar_delta")
			gui.animate(self.acerca_de, "color", vmath.vector4(1,1,1,0), gui.EASING_LINEAR, 1)
			gui.animate(self.proto, "position.y", 900, gui.EASING_INBACK, 1)
			gui.animate(self.sonido_nodo, "position.x", 1370, gui.EASING_INBACK, 1)
			gui.animate(self.laser, "position.y", 900, gui.EASING_INBACK, 1)
			gui.animate(self.play, "position.y", -250, gui.EASING_INBACK, 1, 0,
			function() msg.post("loader:/loader#loader", "avanzar_escena") end)			
			gui.animate(self.paka, "color", vmath.vector4(1,1,1,0), gui.EASING_LINEAR, 0.5)
			gui.animate(self.secretaria, "color", vmath.vector4(1,1,1,0), gui.EASING_LINEAR, 0.5)
			gui.animate(self.box_azul, "color.w", 0, gui.EASING_LINEAR, 0.5)
		elseif gui.pick_node(self.sonido_nodo, action.x, action.y) then
			datos.animar_click(self, self.sonido_nodo, 0.6, 0.5)
			datos.sonido_on_off()
			if datos.sonido == true then
				gui.play_flipbook(self.sonido_nodo, "sonido on")
			else
				gui.play_flipbook(self.sonido_nodo, "sonido off")
			end
		elseif gui.pick_node(self.acerca_de, action.x, action.y) then

			datos.animar_click(self, self.acerca_de, 0.57, 0.47)
			gui.set_enabled(self.acerca_box, true)
			desaparecer_y_aparecer(self,0)
			gui.animate(self.acerca_box, "color", vmath.vector4(0,88/255,246/255,1), gui.EASING_LINEAR, 0.75)
		elseif gui.is_enabled(self.acerca_box) == true then
			datos.animar_click(self, self.falsa_flecha, 0.6, 0.5)
			msg.post("", "release_input_focus")
			desaparecer_y_aparecer(self,1)
			gui.animate(self.acerca_box, "color", vmath.vector4(0,88/255,246/255,0), gui.EASING_LINEAR, 0.75,0,
			function()
				gui.set_enabled(self.acerca_box, false)
				
				msg.post("", "acquire_input_focus")
			end)

			
		end
	end
end
