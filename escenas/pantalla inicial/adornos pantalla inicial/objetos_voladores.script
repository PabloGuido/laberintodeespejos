local datos = require("main.datos")
local width = datos.width
local height = datos.height
local cuenta = 0

local function crear_obj(self)

	local pos_inicial = vmath.vector3(-100, math.random(-100, height+100), -0.5)
	local obj = factory.create("/go#fac_obj_pantalla_inicial", pos_inicial)
	sprite.play_flipbook(obj, self.sprites[math.random(1, tonumber(table.maxn(self.sprites)))])
	go.animate(obj, "euler.z", go.PLAYBACK_LOOP_FORWARD, 360, go.EASING_LINEAR, 5)
	go.animate(obj, "position", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(width+100, math.random(50, height-50), -0.5), go.EASING_LINEAR, 6, 0,
	function()
		go.delete(obj)
	end)
end

function init(self)
	self.sprites = {"espejo", "cannon", "objetivo_off", "objetivo_on",
	"switch_off", "switch_on", "espejo"}
	crear_obj(self)

end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	width = datos.width
	height = datos.height
	cuenta = cuenta + 1
	if cuenta >= 75 then
		crear_obj(self)
		cuenta = 0
	end
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
